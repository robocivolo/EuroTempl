# Generated by Django 4.2.18 on 2025-02-11 09:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_alter_componentinstance_options_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='parameter',
            options={},
        ),
        migrations.RemoveField(
            model_name='parameter',
            name='unit',
        ),
        migrations.RemoveField(
            model_name='parameter',
            name='value',
        ),
        migrations.AddField(
            model_name='parameter',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='parameter',
            name='data_type',
            field=models.CharField(choices=[('float', 'Float'), ('integer', 'Integer'), ('text', 'Text'), ('boolean', 'Boolean'), ('json', 'JSON'), ('geometry', 'Geometry')], default='integer', help_text="Specifies the parameter's data type", max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='parameter',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed parameter description'),
        ),
        migrations.AddField(
            model_name='parameter',
            name='is_required',
            field=models.BooleanField(default=False, help_text='Indicates if parameter is mandatory'),
        ),
        migrations.AddField(
            model_name='parameter',
            name='modified_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='parameter',
            name='units',
            field=models.CharField(blank=True, help_text='Units of measurement for the parameter', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='parameter',
            name='valid_ranges',
            field=models.JSONField(default=dict, help_text='Defines acceptable value ranges and constraints'),
        ),
            # First add UUID field without making it primary key
        migrations.AddField(
            model_name='parameter',
            name='uuid_id',
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        # Copy data and set up new ID
        migrations.RunPython(
            code=lambda apps, schema_editor: schema_editor.execute(
                'UPDATE core_parameter SET uuid_id = gen_random_uuid();'
            )
        ),
        # Remove old ID and make UUID primary
        migrations.RemoveField(
            model_name='parameter',
            name='id',
        ),
        migrations.RenameField(
            model_name='parameter',
            old_name='uuid_id',
            new_name='id',
        ),
        migrations.AlterField(
            model_name='parameter',
            name='id',
        field=models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False),
        ),
        migrations.AlterField(
            model_name='parameter',
            name='component',
            field=models.ForeignKey(help_text='Reference to parent component', on_delete=django.db.models.deletion.CASCADE, to='core.component'),
        ),
        migrations.AlterField(
            model_name='parameter',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the parameter', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='parameter',
            name='name',
            field=models.CharField(help_text='Name of the parameter', max_length=100, validators=[django.core.validators.MinLengthValidator(2)]),
        ),
        migrations.AddIndex(
            model_name='parameter',
            index=models.Index(fields=['component'], name='et_paramete_compone_e7e77e_idx'),
        ),
        migrations.AddIndex(
            model_name='parameter',
            index=models.Index(fields=['name'], name='et_paramete_name_0ed7cd_idx'),
        ),
        migrations.AddIndex(
            model_name='parameter',
            index=models.Index(fields=['data_type'], name='et_paramete_data_ty_c44c8e_idx'),
        ),
        migrations.AddConstraint(
            model_name='parameter',
            constraint=models.UniqueConstraint(fields=('component', 'name'), name='unique_parameter_name_per_component'),
        ),
        migrations.AlterModelTable(
            name='parameter',
            table='et_parameter',
        ),
    ]
